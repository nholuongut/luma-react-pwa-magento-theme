<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/** @var $block \Magento\Checkout\Block\Cart\Sidebar */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
?>

<div data-block="minicart" class="minicart-wrapper">
    <a class="action showcart" href="<?= $block->escapeUrl($block->getShoppingCartUrl()) ?>">
        <span class="text"><?= $block->escapeHtml(__('My Cart')) ?></span>
        <span class="counter qty empty">
            <span class="counter-number">

            </span>
        </span>
    </a>
    <?php if ($block->getIsNeedToDisplaySideBar()):?>
    <div class="block block-minicart" data-role="dropdownDialog">
        <div id="minicart-content-wrapper">
            <div class="feature"> Mini Cart component is not released to the public yet! <br>Contact me to enable this
                feature (yegorshytikov@gmail.com)
                <br>
                And we are not using Magento's broken "section" architecture!
            </div>
        </div>
        <?= $block->getChildHtml('minicart.addons') ?>
    </div>
    <?php else: ?>
    <?php $scriptString = <<<script
            /*require(['jquery'], function ($) {
                $('a.action.showcart').on('click', function() {
                    $(document.body).trigger('processStart');
                });
            });*/
script;
        ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false); ?>
    <?php endif ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], 'window.checkout = ' .
     /* @noEscape */ $block->getSerializedConfig(), false); ?>
    <script type="text/x-magento-init">
        {
        "*": {
            "Magento_Ui/js/block-loader": "<?= $block->escapeJs(
                $block->escapeUrl($block->getViewFileUrl('images/loader-1.gif'))
            ) ?>"
        }
    }
    </script>

    <script>
    function getCookie(cname) {
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return null;
    }

    async function formKey() {
        if (getCookie('form_key') !== null)
            document.querySelectorAll('input[name=form_key]').forEach((e) => {
                console.log(e);
                e.value = getCookie('form_key')
            });
    }

    document.addEventListener("DOMContentLoaded", () => {

    fetch(BASE_URL + 'customer/section/load/?section=', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(async (res) => {
            res = await res.json();
            
            //console.log(res)
            if (res.hasOwnProperty('cart') && res.cart.hasOwnProperty('html')){
                const cart = document.querySelector('#minicart-content-wrapper');
                cart.innerHTML = '';
                cart.insertAdjacentHTML("afterbegin", res.cart.html);
                
                const cartQTY = document.querySelector('.minicart-wrapper .counter.qty');
                const cartQTYNumber = document.querySelector('.minicart-wrapper span.counter-number');
                //I like when it shows 0
                if (true || res.cart.summary_count > 0) {
                    cartQTY.classList.remove('empty');
                    cartQTYNumber.innerHTML= res.cart.summary_count;
                    console.log(res.cart.summary_count)
                }
                const cartShow = document.querySelector('.minicart-wrapper .action.showcart');
                const closeCart = document.querySelector('#btn-minicart-close');
                cartShow.removeEventListener('mouseenter', ShowCart);
                cartShow.removeEventListener('mouseleave', ShowCart);
                cartShow.addEventListener('click', (e) => {e.preventDefault(); ShowCart()});
                if(closeCart !== null)
                closeCart.addEventListener('click', HideCart);

            } else {
                const cartShow = document.querySelector('.action.showcart');
                cartShow.addEventListener('mouseenter', ShowCart);
                cartShow.addEventListener('mouseleave', HideCart);
            }
        })
        .then(formKey());

    function ShowCart(){
        document.querySelector('.block.block-minicart').style.display = 'block'
    }
    function HideCart(){
        document.querySelector('.block.block-minicart').style.display = 'none'
    }
    });


    </script>
</div>

